import type { ComponentProps } from 'react';
import { CodeBlock } from '@/components/code-block';
import { cn } from '@/lib/utils';

const DigitalOcean = (props: ComponentProps<'svg'>) => (
  <svg
    viewBox="0 0 40 40"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <title>DigitalOcean</title>
    <path
      d="M20.0009 40V32.2551C28.2219 32.2551 34.5762 24.1179 31.4388 15.4767C30.2758 12.2765 27.7235 9.72283 24.5219 8.56117C15.8807 5.42524 7.74766 11.7795 7.74627 19.9977L7.74487 20.0005H0C0 6.90384 12.6526 -3.2928 26.3747 0.992221C32.3715 2.86316 37.1368 7.62849 39.0092 13.6253C43.2942 27.3488 33.0962 40 20.0009 40Z"
      fill="currentColor"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M20.0186 32.2743H12.2961V24.5531L12.2975 24.5518H20.0172L20.0186 24.5531V32.2743Z"
      fill="currentColor"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M12.2944 38.2075H6.36187L6.36048 38.2062V32.2736L12.2961 32.2743L12.2958 38.2062L12.2944 38.2075Z"
      fill="currentColor"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M6.36519 32.2743H1.39183L1.38904 32.2729V27.3023L1.39183 27.2981H6.3624L6.36519 27.2995V32.2743Z"
      fill="currentColor"
    />
  </svg>
);

const AWS = (props: ComponentProps<'svg'>) => (
  <svg
    viewBox="0 0 63 38"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <title>AWS</title>
    <path
      d="M17.6912 13.6341C17.6912 14.4066 17.7747 15.033 17.9209 15.4923C18.0879 15.9516 18.2967 16.4527 18.589 16.9956C18.6934 17.1626 18.7351 17.3297 18.7351 17.4758C18.7351 17.6846 18.6099 17.8934 18.3384 18.1022L17.0231 18.9791C16.8351 19.1044 16.6472 19.167 16.4802 19.167C16.2714 19.167 16.0626 19.0626 15.8538 18.8747C15.5615 18.5615 15.311 18.2275 15.1022 17.8934C14.8934 17.5385 14.6846 17.1418 14.4549 16.6615C12.8264 18.5824 10.7802 19.5429 8.31646 19.5429C6.56262 19.5429 5.16372 19.0418 4.14064 18.0396C3.11756 17.0374 2.59559 15.7011 2.59559 14.0308C2.59559 12.256 3.22196 10.8154 4.49558 9.72967C5.76921 8.64396 7.46042 8.1011 9.61097 8.1011C10.3209 8.1011 11.0516 8.16374 11.8242 8.26813C12.5967 8.37253 13.3901 8.53956 14.2253 8.72747V7.2033C14.2253 5.61648 13.8912 4.50989 13.2439 3.86264C12.5758 3.21538 11.4483 2.9022 9.84064 2.9022C9.10987 2.9022 8.35822 2.98571 7.58569 3.17363C6.81317 3.36154 6.06152 3.59121 5.33075 3.88352C4.99668 4.02967 4.74613 4.11319 4.59998 4.15494C4.45383 4.1967 4.34943 4.21758 4.26591 4.21758C3.97361 4.21758 3.82745 4.00879 3.82745 3.57033V2.54725C3.82745 2.21319 3.86921 1.96264 3.97361 1.81648C4.078 1.67033 4.26591 1.52418 4.55822 1.37802C5.28899 1.0022 6.16591 0.689011 7.18899 0.438461C8.21207 0.167033 9.29778 0.0417582 10.4461 0.0417582C12.9307 0.0417582 14.7472 0.605494 15.9165 1.73297C17.0648 2.86044 17.6494 4.57253 17.6494 6.86923V13.6341H17.6912ZM9.21427 16.8077C9.90328 16.8077 10.6132 16.6824 11.3648 16.4319C12.1165 16.1813 12.7846 15.722 13.3483 15.0956C13.6824 14.6989 13.9329 14.2604 14.0582 13.7593C14.1835 13.2582 14.267 12.6527 14.267 11.9429V11.0659C13.6615 10.9198 13.0143 10.7945 12.3461 10.711C11.678 10.6275 11.0307 10.5857 10.3835 10.5857C8.9846 10.5857 7.96152 10.8571 7.27251 11.4209C6.5835 11.9846 6.24943 12.778 6.24943 13.822C6.24943 14.8033 6.49998 15.5341 7.02196 16.0352C7.52306 16.5571 8.25383 16.8077 9.21427 16.8077ZM25.9802 19.0626C25.6044 19.0626 25.3538 19 25.1868 18.8538C25.0198 18.7286 24.8736 18.4363 24.7483 18.0396L19.8417 1.9C19.7165 1.48242 19.6538 1.21099 19.6538 1.06483C19.6538 0.730769 19.8209 0.542857 20.1549 0.542857H22.2011C22.5978 0.542857 22.8692 0.605494 23.0154 0.751648C23.1824 0.876923 23.3077 1.16923 23.4329 1.56593L26.9406 15.3879L30.1978 1.56593C30.3022 1.14835 30.4274 0.876923 30.5945 0.751648C30.7615 0.626374 31.0538 0.542857 31.4296 0.542857H33.1C33.4967 0.542857 33.7681 0.605494 33.9351 0.751648C34.1022 0.876923 34.2483 1.16923 34.3318 1.56593L37.6307 15.5549L41.2428 1.56593C41.3681 1.14835 41.5143 0.876923 41.6604 0.751648C41.8274 0.626374 42.0989 0.542857 42.4747 0.542857H44.4165C44.7505 0.542857 44.9384 0.70989 44.9384 1.06483C44.9384 1.16923 44.9176 1.27363 44.8967 1.3989C44.8758 1.52418 44.834 1.69121 44.7505 1.92088L39.7187 18.0604C39.5934 18.478 39.4472 18.7494 39.2802 18.8747C39.1132 19 38.8417 19.0835 38.4868 19.0835H36.6912C36.2945 19.0835 36.0231 19.0209 35.856 18.8747C35.689 18.7286 35.5428 18.4571 35.4593 18.0396L32.2231 4.57253L29.0077 18.0187C28.9033 18.4363 28.778 18.7077 28.611 18.8538C28.4439 19 28.1516 19.0626 27.7758 19.0626H25.9802ZM52.8099 19.6264C51.7242 19.6264 50.6384 19.5011 49.5945 19.2505C48.5505 19 47.7362 18.7286 47.1934 18.4154C46.8593 18.2275 46.6296 18.0187 46.5461 17.8308C46.4626 17.6429 46.4209 17.4341 46.4209 17.2462V16.1813C46.4209 15.7429 46.5879 15.5341 46.9011 15.5341C47.0264 15.5341 47.1516 15.5549 47.2769 15.5967C47.4022 15.6385 47.5901 15.722 47.7989 15.8055C48.5088 16.1187 49.2813 16.3692 50.0956 16.5363C50.9307 16.7033 51.745 16.7868 52.5802 16.7868C53.8956 16.7868 54.9187 16.5571 55.6285 16.0978C56.3384 15.6385 56.7143 14.9703 56.7143 14.1143C56.7143 13.5297 56.5264 13.0494 56.1505 12.6527C55.7747 12.256 55.0648 11.9011 54.0417 11.567L51.0143 10.6275C49.4901 10.1473 48.3626 9.43736 47.6736 8.4978C46.9846 7.57912 46.6296 6.55604 46.6296 5.47033C46.6296 4.59341 46.8176 3.82088 47.1934 3.15275C47.5692 2.48462 48.0703 1.9 48.6967 1.44066C49.3231 0.960439 50.0329 0.605494 50.8681 0.354945C51.7033 0.104396 52.5802 0 53.4989 0C53.9582 0 54.4384 0.0208791 54.8978 0.0835165C55.378 0.146154 55.8165 0.22967 56.2549 0.313187C56.6725 0.417582 57.0692 0.521978 57.445 0.647253C57.8209 0.772527 58.1132 0.897802 58.322 1.02308C58.6143 1.19011 58.8231 1.35714 58.9483 1.54505C59.0736 1.71209 59.1362 1.94176 59.1362 2.23407V3.21538C59.1362 3.65385 58.9692 3.88352 58.656 3.88352C58.489 3.88352 58.2176 3.8 57.8626 3.63297C56.6725 3.09011 55.3362 2.81868 53.8538 2.81868C52.6637 2.81868 51.7242 3.00659 51.0769 3.4033C50.4296 3.8 50.0956 4.40549 50.0956 5.26154C50.0956 5.84615 50.3044 6.34725 50.722 6.74396C51.1395 7.14066 51.9121 7.53736 53.0187 7.89231L55.9835 8.83187C57.4868 9.31209 58.5725 9.98022 59.2198 10.8363C59.867 11.6923 60.1802 12.6736 60.1802 13.7593C60.1802 14.6571 59.9923 15.4714 59.6373 16.1813C59.2615 16.8912 58.7604 17.5176 58.1132 18.0187C57.4659 18.5407 56.6934 18.9165 55.7956 19.1879C54.856 19.4802 53.8747 19.6264 52.8099 19.6264Z"
      fill="currentColor"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M56.7561 29.7736C49.8869 34.8472 39.9067 37.5406 31.3254 37.5406C19.299 37.5406 8.46273 33.0934 0.278113 25.7022C-0.369139 25.1176 0.215476 24.3242 0.988003 24.7835C9.84075 29.9198 20.7605 33.0307 32.0561 33.0307C39.677 33.0307 48.0495 31.4439 55.7539 28.1868C56.9023 27.6648 57.8836 28.9384 56.7561 29.7736Z"
      fill="currentColor"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M59.6161 26.5165C58.7392 25.389 53.8117 25.9736 51.5777 26.245C50.9095 26.3286 50.8052 25.7439 51.4106 25.3055C55.3359 22.5494 61.7876 23.3428 62.5392 24.2615C63.2909 25.2011 62.3304 31.6527 58.6557 34.7428C58.092 35.2231 57.5491 34.9725 57.7997 34.3461C58.6348 32.2791 60.4931 27.6231 59.6161 26.5165Z"
      fill="currentColor"
    />
  </svg>
);

const Docker = (props: ComponentProps<'svg'>) => (
  <svg
    viewBox="0 0 60 39"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <title>Docker</title>
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M17.3555 27.2506C17.4952 27.2506 17.6282 27.2769 17.7511 27.3244C17.618 27.4016 17.5277 27.5458 17.5277 27.7107C17.5277 27.9572 17.7275 28.1567 17.974 28.1567C18.1428 28.1567 18.2893 28.0629 18.3652 27.9245C18.4186 28.0535 18.4485 28.1951 18.4485 28.3437C18.4485 28.9473 17.959 29.4366 17.3555 29.4366C16.752 29.4366 16.2624 28.9473 16.2624 28.3437C16.2624 27.7399 16.752 27.2506 17.3555 27.2506ZM17.3555 30.2134C16.3245 30.2134 15.4855 29.3747 15.4855 28.3437C15.4855 27.3126 16.3245 26.4738 17.3555 26.4738C18.3864 26.4738 19.2253 27.3126 19.2253 28.3437C19.2253 29.3747 18.3864 30.2134 17.3555 30.2134ZM50.9649 17.9595C45.655 32.0295 33.6633 38.2966 19.5256 38.2966C12.8456 38.2966 7.5164 35.999 4.10808 32.1681L4.1332 32.1515C5.11523 32.2012 5.99395 32.2181 6.88599 32.2181C7.70163 32.2181 8.49948 32.2096 9.23843 32.1681C9.30271 32.1645 9.38314 32.1555 9.44697 32.1515C9.44757 32.1513 9.67495 32.1365 9.56373 32.1347C11.4417 32.0189 12.8973 31.7578 14.2547 31.3705C14.2544 31.3706 14.255 31.3703 14.2547 31.3705C14.5014 31.2999 14.7415 31.2253 14.9706 31.146C15.227 31.057 15.3628 30.7772 15.274 30.5208C15.1852 30.2642 14.9055 30.1282 14.6489 30.2174C12.9248 30.8148 10.6503 31.1437 7.86263 31.2055C6.44423 31.2368 4.89293 31.1995 3.21126 31.0914C2.86339 30.6269 2.54123 30.1442 2.24673 29.6443L1.7812 28.7931C0.374758 26.028 -0.241009 22.7979 0.0857853 19.29H40.9913C44.3518 19.29 47.6337 18.0359 49.1911 16.6525C46.4003 14.3833 46.6769 8.99328 48.4556 6.93654C49.9993 8.17689 52.4885 10.7896 52.0604 14.1156C54.0029 13.1391 57.3765 12.6565 60 14.1704C58.3529 17.3854 54.7323 18.346 50.9649 17.9595ZM5.63771 18.2972H11.1693V12.7653H5.63771V18.2972ZM12.0202 18.2972H17.5524V12.7653H12.0202V18.2972ZM12.0202 11.9144H17.5524V6.38266H12.0202V11.9144ZM18.4032 18.2972H23.9351V12.7653H18.4032V18.2972ZM18.4032 11.9144H23.9351V6.38266H18.4032V11.9144ZM24.7858 18.2972H30.3177V12.7653H24.7858V18.2972ZM24.7858 11.9144H30.3177V6.38266H24.7858V11.9144ZM24.7858 5.53189H30.3177V0H24.7858V5.53189ZM31.1685 18.2972H36.7004V12.7653H31.1685V18.2972Z"
      fill="currentColor"
    />
  </svg>
);

const Vercel = (props: ComponentProps<'svg'>) => (
  <svg
    viewBox="0 0 44 39"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <title>Vercel</title>
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M22 0L44 38.5H0L22 0Z"
      fill="currentColor"
    />
  </svg>
);

const code = `export async function welcome(userId: string) {
  "use workflow";
  
  const user = await getUser(userId);
  const { subject, body } = await generateEmail({
    name: user.name, plan: user.plan
  });
  
  const { status } = await sendEmail({
    to: user.email,
    subject,
    body,
  });
  
  return { status, subject, body };
}`;

export const RunAnywhere = () => (
  <div className="px-4 py-8 sm:py-12 sm:px-12 grid gap-10 items-center overflow-hidden">
    <div className="grid gap-4 max-w-lg text-center mx-auto">
      <h2 className="font-semibold text-xl tracking-tight sm:text-2xl md:text-3xl lg:text-[40px]">
        Run anywhere, no lock‑in
      </h2>
      <p className="text-balance text-lg text-muted-foreground">
        The same code runs locally on your laptop, in Docker, on Vercel or any
        other cloud. Open source and portable by design.
      </p>
    </div>
    <div className="relative isolate">
      <div className="absolute -left-32 top-1/2 -translate-y-1/2 hidden md:flex items-center gap-2">
        {[DigitalOcean, AWS].map((Logo, index) => (
          <div
            className={cn(
              'aspect-[244/189] flex items-center justify-center h-[180px] border rounded-md',
              index
                ? 'bg-gradient-to-r from-background/30 to-transparent'
                : 'bg-background/30'
            )}
            key={index}
          >
            <Logo className="h-8 w-auto opacity-20" />
          </div>
        ))}
      </div>
      <div className="z-10 relative">
        <CodeBlock
          lang="tsx"
          code={code}
          codeblock={{
            className:
              'bg-background max-w-lg text-xs rounded-md w-full mx-auto',
          }}
        />
      </div>
      <div className="absolute -right-32 top-1/2 -translate-y-1/2 hidden md:flex items-center gap-2">
        {[Docker, Vercel].map((Logo, index) => (
          <div
            className={cn(
              'aspect-[244/189] flex items-center justify-center h-[180px] border rounded-md',
              index
                ? 'bg-background/30'
                : 'bg-gradient-to-l from-background/30 to-transparent'
            )}
            key={index}
          >
            <Logo className="h-8 w-auto opacity-20" />
          </div>
        ))}
      </div>
    </div>
  </div>
);
